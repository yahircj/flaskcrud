version: '3'
services:
  mysql:
    image: mysql:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: 'root'  # Contraseña para el usuario root
      MYSQL_DATABASE: 'db'         # Nombre de la base de datos que se creará al iniciar
      MYSQL_USER: 'user'           # Usuario adicional (opcional, pero recomendado)
      MYSQL_PASSWORD: 'password'   # Contraseña del usuario adicional (opcional)
    volumes:
      - mysql_data:/var/lib/mysql  # Volumen para persistir datos de MySQL
      - ./sql/db.sql:/docker-entrypoint-initdb.d/db.sql
    ports:
      - "3306:3306"  # Puerto expuesto (3606 no es el puerto estándar de MySQL)
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 5

  pythonapp:
    build: .  # Construye la imagen desde el Dockerfile en el directorio actual
    container_name: flask_app
    depends_on:
      mysql:
        condition: service_healthy  # Espera a que MySQL esté saludable
    ports:
      - "4000:5000"  # Expone el puerto 5000 del contenedor como 4000 en el host
    volumes:
      - ./app:/app  # Monta la carpeta app en /app dentro del contenedor
    environment:
      FLASK_ENV: development  # Entorno de Flask
      DATABASE_URL: mysql+pymysql://root:root@mysql:3306/db  # URL de conexión a la base de datos
    links:
      - mysql  # Asegura que el contenedor de Flask pueda comunicarse con MySQL

volumes:
  mysql_data:  # Volumen para persistir datos de MySQL